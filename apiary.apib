FORMAT: 1A
HOST: https://www.dudeauth.com

USECOMMONSDKLIBRARY: TRUE
GENERATEASYNCCODE: TRUE
GENERATEINTERFACES: TRUE
USEMETHODPREFIX: TRUE
USEMODELPOSTFIX: FALSE
USECONTROLLERPOSTFIX: FALSE
USEENUMPOSTFIX: FALSE
USECONSTRUCTORSFORCONFIG: TRUE
CSHARPDEFAULTNAMESPACE: DSI.SDK.Security
JAVADEFAULTNAMESPACE: io.dudesolutions.security
BRANDLABEL: Dude Solutions, Inc.
USERAGENT: Dude SDK

# Dude Security Api
![Dude Solutions](https://dudesolutions.com/assets/img/logo.png)

## Reference
Good reference document: https://raw.githubusercontent.com/apiaryio/api-blueprint/master/examples/Polls%20API.md

## Authentication
*Dude Security Api* uses OAuth v2 Authentication. First you create a new (or acquire existing) OAuth v2 token using [DudeAuth](https://www.dudeauth.com/).

New to *OAuth*?  Check out the [OAuth Bible](http://oauthbible.com/) for good reference material.

## Media Types
Where applicable this API uses the *JSON* media-type to represent resources.

Requests and responses with a message-body use plain JSON to set or update resources.

## Error States
Common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used throughout this API.

In addition to standard response codes the response object returned from the server during an exception event may contain additional information in the following JSON format:

        {
            "message": "SOME MESSAGE",
            "dudeReferenceId": "3523845A-4729-4CCB-9E16-01DEADF6C2DF",
            "stackTrace": "Null, Typically"
        }

## Data Restriction
Depending on the access level granted to the calling client certain data elements throughout this API will be removed and not returned.

## Dates & Times
All dates and times are represented in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format.  In addition, *Dude Security Api* will always provide [Coordinated Universal Time](https://en.wikipedia.org/wiki/Coordinated_Universal_Time).

The API is capable of parsing most date and time formats, however we do require UTC dates and times be provided from all calling systems.  We highly recommend you utilize the ISO-8601 standard when communicating dates and time to the API as well.

## Known Issues
None at this time

## Documentation Notes
In Progress

# Group System Information

## System Information [/]

### GET

+ Response 200 (application/json)
    + Attributes (System Information)

# Group Heartbeat

## Heartbeat [/heartbeat]
The heartbeat is exposed and provided to check for availability of the service.
Any response that does not provide a ```200 OK``` response code should be treated as an error.

### GET

+ Response 200 (application/json)
    + Headers

            X-Dude-Api-Limit: Unlimited or Number
            X-Dude-Api-Remaining: Unlimited or Number
            X-Dude-Api-Server: Api Server ID

    + Attributes (Heartbeat)

# Group Account

## Account Collection [/accounts/{accountId}{?includeAudit}]

+ Parameters
  + accountId: 1234567890 (number, required) - {INT} The Dude Platform account id.
  + includeAudit: true (boolean, optional) - Flag to return audit information from the api

### GET

+ Response 200 (application/json)
  + Attributes (Account)

# Group User

## User Collection [/accounts/{accountId}/users/{id}{?includeAudit}]

+ Parameters
  + accountId: 1234567890 (number, required) - {INT} The Dude Platform account the user belongs too.
  + id: 1234567890 (number, required) - {INT} The Dude Platform User Id that represents the user.
  + includeAudit: true (boolean, optional) - Flag to return audit information from the api

### GET

+ Response 200 (application/json)
  + Attributes (UserDetail)

### PUT

+ Response 201 (application/json)
  + Attributes (User)

### DELETE

+ Response 201
  + Attributes (User)

## Get Users [/accounts/{accountId}/users{?includeAudit}]
This endpoint gets a list of Dude Platform users for the account.

+ Parameters
  + accountId: 1234567890 (number, required) - {INT} The Dude Platform account the user belongs too.
  + includeAudit: true (boolean, optional) - Flag to return audit information from the api

### Get Users [GET]
+ Response 200 (application/json)
  + Attributes (array[User])

# Group Account Products

## Account Product Collection [/accounts/{accountId}/products{?q}]

+ Parameters
    + accountId: 1234567890 (required, number) - {INT} ID of the account in the form of an integer
    + q: Sample (string, optional) - Queries product name containing this value
    + includeAudit: true (boolean, optional) - Flag to return audit information from the api

### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + data (required, array[Product]) - The Product response collection.

### POST

+ Response 201 (application/json)
    + Attributes (Asset Account)

## Account Product Detail [/accounts/{accountId}/products/{id}{?includeAudit}]

+ Parameters
    + accountId: 1234567890 (required, number) - {INT} ID of the account in the form of an integer
    + id: 12345 (required, number) - {INT} ID of the product in the form of an integer
    + includeAudit: true (boolean, optional) - Flag to return audit information from the api

### GET

+ Response 200 (application/json)
    + Attributes (Asset Account)

### DELETE

+ Response 204


# Group Master Data
The master data collection allows for integration between the Dude Platform and Dude Solutions' other system of records.

## Get User [/masterdata/users/{userName}{?sourceAbbreviation,includeAudit}]
The get user is exposed and provided to return a Dude Platform user from a system of record user name.
Any response that does not provide a ```200 OK``` response should be treated as an error.

+ Parameters
  + userName: wade41 (string, required) - The name of the user from the system of record.
  + sourceAbbreviation: SD (string, required) - The system of record source abbreviation (SD or FD).
  + includeAudit: true (boolean, optional) - Flag to return audit information from the api

### Get User [GET]
+ Response 200 (application/json)
    + Attributes (UserDetail)

## Get System Of Record User [/masterdata/platformusers/{userId}{?includeAudit}]
The get system of record user is exposed and provided to return a system of record user from a Dude Platform user.
Any response that does not provide a ```200 OK``` response should be treated as an error.

+ Parameters
  + userId: 100234 (int, required) - The id of the Dude Platform user.
  + includeAudit: true (boolean, optional) - Flag to return audit information from the api

### Get System Of Record User [GET]
+ Response 200 (application/json)
    + Attributes (SystemOfRecordUser)

## Get Account [/masterdata/accounts/{accountNumber}{?sourceAbbreviation,includeAudit}]
The get account is exposed and provided to return a Dude Platform account from a system of record account id.
Any response that does not provide a ```200 OK``` response should be treated as an error.

+ Parameters
  + accountNumber: 1234567890 (string, required) - {INT} The account number for the system of record account.
  + sourceAbbreviation: SD (string, required) - The system of record source abbreviation (SD or FD).
  + includeAudit: true (boolean, optional) - Flag to return audit information from the api

### Get Account [GET]
+ Response 200 (application/json)
  + Attributes (Account)

## Get Product [/masterdata/products/{productId}{?sourceAbbreviation}]
The get product is exposed and provided to return a Dude Platform product from a system of record product id.
Any response that does not provide a ```200 OK``` response should be treated as an error.

+ Parameters
  + productId: MD (string, required) - The product Id from the system of record.
  + sourceAbbreviation: SD (string, required) - The system of record source abbreviation (SD or FD).
  + includeAudit: true (boolean, optional) - Flag to return audit information from the api

### Get Product [GET]
+ Response 200 (application/json)
    + Attributes (Product)

## Add User System of Record Map [/masterdata/{sourceAbbreviation}/users/{userName}/map/{userSummaryId}{?includeAudit}]
The add user system of record map is exposed and provided to create a system of record user map between the Dude Platform user and the system of record user name.
Any response that does not provide a ```201 Created``` response should be treated as an error.

+ Parameters
    + sourceAbbreviation: SD (string, required) - The system of record source abbreviation (SD or FD).
    + userName: wade41 (string, required) - The user name from the system of record.
    + userSummaryId: 1234567890 (number, required) - {INT} The Dude Platform user to map too.
    + includeAudit: true (boolean, optional) - Flag to return audit information from the api

### Add User System of Record Map [POST]
+ Response 201 (application/json)
    + Attributes (SystemOfRecordUser)

# Data Structures

## System Information (object)
+ `application`: `Dude Security Api` (string, required) - The name of the application.
+ `version` : `1.0.0.0` (string, required) - The assembly version.
+ `apiVersion` : `1.0.0.0` (string, required) - The API version.
+ `vitals` (Heartbeat, required) - The state of the system dependencies.
+ `links` (array[System Links], required) - The API routes.

## System Links (object)
+ `endpoint` : `WorkOrder` (string, required) - The name of the endpoint.
+ `action` : `Get` (string, required) - The REST action.
+ `route` : `/accounts/{accountId}/workorders` (string, required) - The route to the endpoint.

## Heartbeat (object)
Represents a heartbeat response.

### Properties
+ `vitalCheck`: true (boolean, required) - Vital check to ensure something is online.

## Base Collection Response (object)

### Properties
+ `page`: 1 (number, required) - {INT} The current page provided in the response data.
+ `pageSize`: 1000 (number, required) - {INT} The page size returned in the response data.
+ `dataSize`: 1000 (number, required) - {INT} The total records returned in the response.
+ `total`: 2000 (number, required) - {INT} The total number of records available in the collection.

## UserDetail (object)
Represents a UserDetail object

### Properties
+ `id` (number, required) - {INT} The unique ID for the UserDetail.
+ `firstName` (string, required) - The first name of the user.
+ `lastName` (string, required) - The last name of the user.
+ `email` (string, required) - The email address for the user.
+ `hourlyRate` (number, optional) - The hourly Rate
+ `phones` (array[UserPhone], optional) - The collection of phone numbers for the user.
+ `createdByUser` (User, optional) - The user who created the object.
+ `createdDateTime` (string, optional) - The UTC date and time the object was created.
+ `createdByApiClient` (ClientInfo, required) - The API Client who created the object.
+ `updatedByUser` (User, optional) - The user who last updated the object.
+ `updatedDateTime` (string, optional) - The UTC date and time the object was last updated.
+ `updatedByApiClient` (ClientInfo, required) - The API Client that last updated the object.

## User (object)
Represents a user.

### Properties
+ `id` (number, required) - {INT} The unique ID that represents the user.
+ `firstName` (string, required) - The first name of the user.
+ `lastName` (string, required) - The last name of the user.
+ `email` (string, required) - The email of the user.

## UserPhone (object)
Represents a UserPhone object

### Properties
+ `id` (number, required) - {INT} The unique ID that represents the userPhone.
+ `type` (number, required) - {INT} The type of the phone record.
+ `number` (string, required) - The number.
+ `extension` (string, optional) - The extension.

## ClientInfo (object)
Represents the API Client object

### Properties
+ `id` (number, required) - {INT} The unique ID that represents the API client.

## Account (object)
Represents a Dude Platform account

### Properties
+ `id` (number, required) - {INT} The unique ID for the account.
+ `name` (string, required) - The name of the account.
+ `number` (number, required) - {INT} The number for the account.
+ `contactFirstName` (string, optional) - The first name of the contact person.
+ `contactMiddleName` (string, optional) - The middle name of the contact person.
+ `contactLastName` (string, optional) - The last name of the contact person.
+ `contactPhoneNumber` (string, optional) - The phone number for the contact person.
+ `contactEmailAddress` (string, optional) - The email address for the contact person.
+ `location` (Location, required) - The location for the account.
+ `market` (Market, required) - The market for the account.
+ `timeZone` (string, required) - The time zone for the account.
+ `systemOfRecordAccount` (SystemOfRecordAccount, optional) - The system of record account.
+ `assets` (Product, required) - The collection of assets the account owns.
+ `createdByUser` (User, optional) - The user who created the object.
+ `createdDateTime` (string, optional) - The UTC date and time the object was created.
+ `createdByApiClient` (ClientInfo, required) - The API Client who created the object.
+ `updatedByUser` (User, optional) - The user who last updated the object.
+ `updatedDateTime` (string, optional) - The UTC date and time the object was last updated.
+ `updatedByApiClient` (ClientInfo, required) - The API Client that last updated the object.

## Asset Account (object)
Represents a product account association

### Properties
+ `account` (Account, required) - The account.
+ `asset` (Product, required) - The product.
+ `createdByUser` (User, optional) - The user who created the object.
+ `createdDateTime` (string, optional) - The UTC date and time the object was created.
+ `createdByApiClient` (ClientInfo, required) - The API Client who created the object.
+ `updatedByUser` (User, optional) - The user who last updated the object.
+ `updatedDateTime` (string, optional) - The UTC date and time the object was last updated.
+ `updatedByApiClient` (ClientInfo, required) - The API Client that last updated the object.

## Product (object)
Represents a product

### Properties
+ `id` (number, required) - {INT} The unique ID for the product.
+ `name` (string, required) - The name of the product.
+ `url` (string, required) - The url for the product.

## Location (object)
Represents a geo-location point

### Properties
+ `latitude` (number, optional) - The latitude for the location.
+ `longitude` (number, optional) - The longitude of the location.
+ `streetAddress` (string, optional) - The street address for the location.
+ `streetAddressLine2` (string, optional) - The second, optional line for street address for the location.
+ `city` (string, required) - The city for the location.
+ `region` (string, required) - The region for the location.
+ `postalCode` (string, required) - The postal code for the location.
+ `country` (string, required) - The country for the location.

## Market (object)
Represents a market object

### Properties
+ `id` (number, required) - {INT} The unique ID for the market.
+ `name` (string, required) - The name of the market.
+ `marketDescription` (string, required) - The description for the market.
+ `createdByUser` (User, optional) - The user who created the object.
+ `createdDateTime` (string, optional) - The UTC date and time the object was created.
+ `updatedByUser` (User, optional) - The user who last updated the object.
+ `updatedDateTime` (string, optional) - The UTC date and time the object was last updated.

## SystemOfRecordAccount (object)
Represents a system of record account

### Properties
+ `accountNumber` (number, required) - {INT} The account number for the system of record.
+ `sourceAbbreviation` (string, required) - The source abbreviation for the system of record (like SD for School Dude or FD for Facility Dude).
+ `accountGarden` (string, required) - The account garden from the system of record.

## SystemOfRecordUser (object)
Represents a system of record user

### Properties
+ `userName` (string, required) - The user name for the system of record user.
+ `sourceAbbreviation` (string, required) - The the source abbreviation for the system of record(like SD for School Dude or FD for Facility Dude).
+ `userSummaryId` (number, required) - {INT} The dude platform user.
+ `createdByUser` (User, optional) - The user who created the object.
+ `createdDateTime` (string, optional) - The UTC date and time the object was created.
+ `createdByApiClient` (ClientInfo, required) - The API Client who created the object.
+ `updatedByUser` (User, optional) - The user who last updated the object.
+ `updatedDateTime` (string, optional) - The UTC date and time the object was last updated.
+ `updatedByApiClient` (ClientInfo, required) - The API Client that last updated the object.
